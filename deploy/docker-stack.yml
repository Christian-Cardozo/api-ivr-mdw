version: "3.8"

networks:
  ivr-net:
    driver: overlay
  traefik-public:
    external: true
    name: traefik-public 

services:
  api-gateway:
    image: ${CI_REGISTRY_IMAGE}/api-ivr-mdw/api-gateway:${IMAGE_TAG}
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_ENV:  ${APP_ENV}
      APP_PORT: ${APP_PORT}
      APP_HOST: ${APP_HOST}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}      
      IDP_URL: ${IDP_URL}
      IDP_USERKEY: ${IDP_USERKEY}       
      MULESOFT_CUSTOMER_MS_HOST: ${MULESOFT_CUSTOMER_MS_HOST}
      MULESOFT_CUSTOMER_MS_PORT: ${MULESOFT_CUSTOMER_MS_PORT}
      HOST: ${HOST}
    networks: [ivr-net, traefik-public]
    # En Linux prod podÃ©s usar ingress (shorthand):
    # ports:
    #  - "7000:3000"
    deploy:
      mode: replicated
      replicas: ${API_GATEWAY_REPLICAS}
      restart_policy: { condition: any }
      resources:
        limits: { cpus: "0.50", memory: 512M }
        reservations: { memory: 256M }
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
      labels:
        - "traefik.enable=true"

        # HTTP (7000)
        - "traefik.http.routers.api-gateway-http.rule=Host(`${HOST}.corp.cloudteco.com.ar`) || Host(`api-ivr1`) || Host(`api-ivr2`)"
        - "traefik.http.routers.api-gateway-http.entrypoints=web"
        - "traefik.http.routers.api-gateway-http.service=api-gateway"

        # HTTPS (7443)
        - "traefik.http.routers.api-gateway-https.rule=Host(`${HOST}.corp.cloudteco.com.ar`) || Host(`api-ivr1`) || Host(`api-ivr2`)"
        - "traefik.http.routers.api-gateway-https.entrypoints=websecure"
        - "traefik.http.routers.api-gateway-https.tls=true"
        - "traefik.http.routers.api-gateway-https.service=api-gateway"
          
        - "traefik.http.services.api-gateway.loadbalancer.server.port=3000"
        - "traefik.swarm.network=traefik-public"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

  mulesoft-customer-ms:
    image: ${CI_REGISTRY_IMAGE}/api-ivr-mdw/mulesoft-customer-ms:${IMAGE_TAG}
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_ENV:  ${APP_ENV}      
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}      
      IDP_URL: ${IDP_URL}
      IDP_USERKEY: ${IDP_USERKEY}
      MULESOFT_CUSTOMER_BASE_URL: ${MULESOFT_CUSTOMER_BASE_URL}
      MULESOFT_CLIENT_ID: ${MULESOFT_CLIENT_ID}
      MULESOFT_CUSTOMER_TIMEOUT_MS: ${MULESOFT_CUSTOMER_TIMEOUT_MS}
      MULESOFT_CUSTOMER_RETRIES: ${MULESOFT_CUSTOMER_RETRIES}
      MULESOFT_CUSTOMER_RETRY_DELAY_MS: ${MULESOFT_CUSTOMER_RETRY_DELAY_MS}
      MULESOFT_CUSTOMER_CB_ENABLED: ${MULESOFT_CUSTOMER_CB_ENABLED}      
    networks: [ivr-net]
    deploy:
      mode: replicated
      replicas: ${MULESOFT_CUSTOMER_MS_REPLICAS}
      restart_policy: { condition: any }
      resources:
        limits: { cpus: "0.25", memory: 256M }
        reservations: { memory: 128M }

  redis:
    image: redis:7-alpine
    networks: [ivr-net]
    deploy:
      placement:
        constraints: [ "node.role == manager" ]
