version: "3.8"

networks:
  ivr-net:
    external: true
    name: ivr-net

services:
  api-gateway:
    image: ${CI_REGISTRY_IMAGE}/api-ivr-mdw/api-gateway:${IMAGE_TAG}
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_ENV:  ${APP_ENV}
      APP_PORT: ${APP_PORT}
      APP_HOST: ${APP_HOST}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IDP_URL: ${IDP_URL}
      IDP_USERKEY: ${IDP_USERKEY}
      MULE_TIMEOUT_MS: ${MULE_TIMEOUT_MS}
      MULE_RETRIES: ${MULE_RETRIES}      
      MULESOFT_CUSTOMER_MS_HOST: ${MULESOFT_CUSTOMER_MS_HOST}
      MULESOFT_CUSTOMER_MS_PORT: ${MULESOFT_CUSTOMER_MS_PORT}
    networks: [ivr-net]
    # En Linux prod podÃ©s usar ingress (shorthand):
    #ports:
    #  - "7000:3000"
    deploy:
      mode: replicated
      replicas: ${API_GATEWAY_REPLICAS}
      restart_policy: { condition: any }
      resources:
        limits: { cpus: "0.50", memory: 512M }
        reservations: { memory: 256M }
      update_config:
        parallelism: 1
        delay: 5s
        order: start-first
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

  mulesoft-customer-ms:
    image: ${CI_REGISTRY_IMAGE}/api-ivr-mdw/mulesoft-customer-ms:${IMAGE_TAG}
    environment:
      NODE_ENV: ${NODE_ENV}
      APP_ENV:  ${APP_ENV}      
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      IDP_URL: ${IDP_URL}
      IDP_USERKEY: ${IDP_USERKEY}
      MULE_TIMEOUT_MS: ${MULE_TIMEOUT_MS}
      MULE_RETRIES: ${MULE_RETRIES}
      MULE_BASE_URL: ${MULE_BASE_URL}
      MULE_CLIENT_ID: ${MULE_CLIENT_ID}
    networks: [ivr-net]
    deploy:
      mode: replicated
      replicas: ${MULESOFT_CUSTOMER_MS_REPLICAS}
      restart_policy: { condition: any }
      resources:
        limits: { cpus: "0.25", memory: 256M }
        reservations: { memory: 128M }

  redis:
    image: redis:7-alpine
    networks: [ivr-net]
    deploy:
      placement:
        constraints: [ "node.role == manager" ]
