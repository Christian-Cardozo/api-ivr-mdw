version: "3.8"

networks:
  ivr-net:
    driver: overlay
  traefik-public:
    external: true
    name: traefik-public 

services:
  api-gateway:
    image: api-ivr-mdw/api-gateway:latest
    env_file: ./.env
    environment:
      APP_ENV: local
    networks: 
      - ivr-net
      - traefik-public
    #ports:
    #  - target: 3000
    #    published: 3000
    #    protocol: tcp
    #    mode: host
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: { condition: any }
      update_config:
        order: start-first
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.api-gateway.rule=Host(`local.api-ivr-mdw`)"
        - "traefik.http.routers.api-gateway.entrypoints=web"
        - "traefik.http.services.api-gateway.loadbalancer.server.port=3000"
        - "traefik.docker.network=traefik-public"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

  mulesoft-customer-ms:
    image: api-ivr-mdw/mulesoft-customer-ms:latest
    env_file: ./.env
    environment:
      APP_ENV: local
    networks: [ivr-net]
    deploy:
      mode: replicated
      replicas: 1
      restart_policy: { condition: any }

  redis:
    image: redis:7-alpine
    networks: [ivr-net]
    deploy:
      placement:
        constraints: [ "node.role == manager" ]
